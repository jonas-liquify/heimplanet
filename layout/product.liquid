<!doctype html>
<html data-wf-page="661e93d028f6a94dfed34751" data-wf-site="661e93cf28f6a94dfed346bc" lang="en"><head><meta charset="utf-8">
<title>{{ page_title }}</title><meta content="{{ page_description }}" name="description">
<meta content="{{ page_title }}" property="og:title">
<meta content="{{ page_description }}" property="og:description">
<meta content="{{ page_title }}" property="twitter:title">
<meta content="{{ page_description }}" property="twitter:description">
<meta property="og:type" content="website">
<meta content="summary_large_image" name="twitter:card">
<meta content="width=device-width, initial-scale=1" name="viewport">
<link href="{{ 'normalize.css' | asset_url }}" rel="stylesheet" type="text/css">
<link href="{{ 'components.css' | asset_url }}" rel="stylesheet" type="text/css">
<link href="{{ 'bandwerk-shopify-store.css' | asset_url }}" rel="stylesheet" type="text/css">
<script type="text/javascript">!function(o,c){var n=c.documentElement,t=" w-mod-";n.className+=t+"js",("ontouchstart"in o||o.DocumentTouch&&c instanceof DocumentTouch)&&(n.className+=t+"touch")}(window,document);</script>
            {% if settings.favicon == blank %}
              <link href="{{ 'favicon.png' | asset_url }}" rel="shortcut icon" type="image/x-icon">
            {% else %}
              <link rel="shortcut icon" type="image/png" href="{{ settings.favicon | img_url: '32x32' }}">
            {% endif %}
        

            {% if settings.apple_touch_icon == blank %}
              <link href="{{ 'webclip.png' | asset_url }}" rel="apple-touch-icon">
            {% else %}
              <link rel="apple-touch-icon" type="image/png" href="{{ settings.apple_touch_icon | img_url: '32x32' }}">
            {% endif %}
        
<script defer="" src="{{ 'alpinejs3.js' | asset_url }}"></script><script defer="" auto="" min="" src="https://cdn.jsdelivr.net/gh/liquify-pro/core@latest/script.js"></script><meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
<style>[x-cloak] { display: none !important; }
  [li-cloak_disabled] { display: none !important; }
/* Setup Font and Background Color if Text is selected */
::selection {
  color: #fff;
  background: #E91B7F;
}
::-moz-selection {
  color: #fff;
  background: #E91B7F;
}
</style><meta name="theme-color" content="#000" media="(prefers-color-scheme: light)">
<meta name="theme-color" content="#fff" media="(prefers-color-scheme: dark)">
<!--   Swiper JS   --><script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script><script type="application/ld+json">{
        "@context": "https://schema.org",
        "@type": "Product",
        "name": "{{ product.title }}",
       "image": "https:{{ product.featured_image.src | img_url: '1500x1500' }}",
        "description": "{{ product.description | strip_html }}",
        "brand": "{{ product.vendor }}",
        "sku": "{{ product.selected_or_first_available_variant.sku }}",
        "offers": [
        {% for variant in product.variants %}{
          "@type": "Offer",
          "url": "{{ variant.url }}",
          "priceCurrency": "EUR",
          "price": "{{ variant.price }}",
      "priceValidUntil": "{{ 'now' | date: '%s' | plus: 31536000 | date: '%Y-%m-%d' | uri_encode | replace:'+','%20' }}",
          "availability": "{% if variant.available %}https://schema.org/InStock{% else variant.available == false %}https://schema.org/SoldOut{% endif %}",
          "itemCondition": "https://schema.org/NewCondition"
        }{% if forloop.last == false %},{% endif %}{% endfor %}
        ]
        }
    </script><script type="application/ld+json">{
         "@context": "https://schema.org",
         "@type": "BreadcrumbList",
         "itemListElement":
         [
          {
           "@type": "ListItem",
           "position": 1,
           "item":
           {
            "@id": "{{ shop.url }}",
            "name": "Home"
            }
          },
        {
           "@type": "ListItem",
           "position": 2,
           "item":
           {
            "@id": "{% if collection.url %}{{ collection.url }}{% else %}{{ product.vendor }}{% endif %}",
            "name": "{% if collection.url %}{{collection.title }}{% else %}{{ product.vendor }}{% endif %}"
            }
          },
          {
           "@type": "ListItem",
          "position": 3,
          "item":
           {
             "@id": "{{ product.url }}",
             "name": "{{ product.title }}"
           }
          }
         ]
        }
    </script><script type="application/ld+json">{
          "@context": "https://schema.org",
          "@type": "FAQPage",
          "mainEntity": [{% for fa_qs in shop.metaobjects.fa_qs.values %}{
            "@type": "Question",
            "name": "{{ fa_qs.frage }}",
            "acceptedAnswer": {
              "@type": "Answer",
              "text": "{{ fa_qs.antwort | metafield_tag | strip_html }}"
            }
          }{% if forloop.last == false %},{% endif %}{% endfor %}
          ]
        }
    </script><link rel="stylesheet" href="https://unpkg.com/tippy.js@4/themes/light-border.css">
<script src="{{ '_helper.js' | asset_url }}" type="text/javascript"></script>{{ content_for_header }}</head>
<body li-page="product">

<div class="page-wrapper">{% render 'global_styles' %}
{% section 'header' %}
 {{ content_for_layout }} {% section 'footer' %}
</div><script src="https://d3e54v103j8qbb.cloudfront.net/js/jquery-3.5.1.min.dc5e7f18c8.js?site=661e93cf28f6a94dfed346bc" type="text/javascript" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script><script src="{{ 'bandwerk-shopify-store.js' | asset_url }}" type="text/javascript"></script><script>// Find all elements with the attribute 'year'
const elements = document.querySelectorAll('[year]');
// Get the current year
const currentYear = new Date().getFullYear();
// Loop through all elements and set their text content to the current year
elements.forEach(element => {
    element.textContent = currentYear;
});
</script>{% render 'search_javascript' %}
<script>document.addEventListener('DOMContentLoaded', () => {
    const navbar = document.querySelector('.section_navbar');
    let lastScrollTop = 0;
    let isScrollingDown = false;
    let animationFrame;
    const navbarHeight = 160; // Set this to your navbar's height
    const animateNavbar = (start, end, duration) => {
        const startTime = performance.now();
        const animate = (currentTime) => {
            const elapsed = currentTime - startTime;
            const progress = Math.min(elapsed / duration, 1);
            const ease = progress < 0.5 ? 2 * progress * progress : -1 + (4 - 2 * progress) * progress;
            navbar.style.top = `${start + (end - start) * ease}px`;
            if (progress < 1) {
                animationFrame = requestAnimationFrame(animate);
            }
        };
        animationFrame = requestAnimationFrame(animate);
    };
    window.addEventListener('scroll', () => {
        const currentScroll = window.pageYOffset || document.documentElement.scrollTop;
        if (currentScroll > lastScrollTop && currentScroll > window.innerHeight * 0.01) {
            if (!isScrollingDown) {
                cancelAnimationFrame(animationFrame);
                animateNavbar(0, -navbarHeight, 500); // Adjusted end value
                isScrollingDown = true;
            }
        } else {
            if (isScrollingDown) {
                cancelAnimationFrame(animationFrame);
                animateNavbar(-navbarHeight, 0, 500); // Adjusted start value
                isScrollingDown = false;
            }
        }
        lastScrollTop = currentScroll;
    });
});
</script><script>const okendoUserId = '2b5b8231-70cb-49e6-a5dc-922e8fd6820f';
const productId = '{{ product.id }}';
const reviewsPerPage = 5;
const orderBy = 'date desc';
const locale = 'de';
let currentPage = 1;
let totalPages = 1;
let reviews = [];
// Construct the review link
const reviewLink = `https://okendo.reviews/?subscriberId=${okendoUserId}&productId=shopify-${productId}&locale=${locale}&variant=formal`;
// Set the review link to the button
document.querySelector('[rev-button-link]').setAttribute('href', reviewLink);
// Fetch review aggregate data
const aggregateUrl = `https://api.okendo.io/v1/stores/${okendoUserId}/products/shopify-${productId}/review_aggregate`;
fetch(aggregateUrl, {
  method: 'GET',
  headers: {
    'Content-Type': 'application/json'
  }
})
  .then(response => response.json())
  .then(data => {
    const reviewAggregate = data.reviewAggregate;
    const recommendationPercentage = ((reviewAggregate.recommendationCount / reviewAggregate.reviewCount) * 100).toFixed(0);
    document.querySelector('[rev-percentage]').innerText = `${recommendationPercentage}% of reviewers`;
  })
  .catch(error => console.error('Error fetching review aggregate:', error));
// Fetch all reviews without limit
const reviewsUrl = `https://api.okendo.io/v1/stores/${okendoUserId}/products/shopify-${productId}/reviews?orderBy=${encodeURIComponent(orderBy)}`;
fetch(reviewsUrl, {
  method: 'GET',
  headers: {
    'Content-Type': 'application/json'
  }
})
  .then(response => response.json())
  .then(data => {
    reviews = data.reviews;
    totalPages = Math.ceil(reviews.length / reviewsPerPage);
    buildAllReviews();
    renderReviews();
    updatePagination();
  })
  .catch(error => console.error('Error fetching reviews:', error));
// Fetch review media
const mediaUrl = `https://api.okendo.io/v1/stores/${okendoUserId}/products/shopify-${productId}/review_media?orderBy=${encodeURIComponent(orderBy)}`;
fetch(mediaUrl, {
  method: 'GET',
  headers: {
    'Content-Type': 'application/json'
  }
})
  .then(mediaResponse => mediaResponse.json())
  .then(mediaData => {
    const mediaMap = new Map();
    mediaData.media.forEach(mediaItem => {
      if (!mediaMap.has(mediaItem.reviewId)) {
        mediaMap.set(mediaItem.reviewId, []);
      }
      mediaMap.get(mediaItem.reviewId).push(mediaItem.url);
    });
    reviews.forEach(review => {
      review.images = mediaMap.get(review.reviewId) || [];
    });
    buildAllReviews();
    renderReviews();
  })
  .catch(error => console.error('Error fetching review media:', error));
function buildAllReviews() {
  const reviewsContainer = document.querySelector('.detail_content-main');
  reviewsContainer.innerHTML = ''; // Clear previous reviews if any
  reviews.forEach(review => {
    const reviewItem = document.createElement('div');
    reviewItem.classList.add('detail_content-item', 'background-color-alternate', 'review-item');
    reviewItem.innerHTML = `
      <div class="detail_content-item-top">
        <div class="star_container">${renderStars(review.rating)}</div>
        <div rev-time-ago="" class="text-size-regular text-color-hazel60 text-weight-semibold">${timeAgo(new Date(review.dateCreated))}</div>
      </div>
      <div class="reviews_content-name">
        <div rev-name="" class="text-size-medium text-weight-semibold">${review.reviewer.displayName}</div>
      </div>
      <p rev-text-content="" class="text-size-medium text-color-hazel90">${review.body}</p>
      <div class="review_img-holder">${renderImages(review.images)}</div>
    `;
    reviewsContainer.appendChild(reviewItem);
  });
}
function renderReviews() {
  const reviewItems = document.querySelectorAll('.review-item');
  reviewItems.forEach((item, index) => {
    item.style.display = (index >= (currentPage - 1) * reviewsPerPage && index < currentPage * reviewsPerPage) ? 'flex' : 'none';
  });
}
function updatePagination() {
  const currentPageElement = document.querySelector('[rev-current-page]');
  const totalPagesElement = document.querySelector('[rev-total-pages]');
  const prevButton = document.querySelector('[rev-back]');
  const nextButton = document.querySelector('[rev-next-page]');
  if (!currentPageElement || !totalPagesElement || !prevButton || !nextButton) {
    return;
  }
  currentPageElement.innerText = currentPage;
  totalPagesElement.innerText = totalPages;
  prevButton.style.visibility = currentPage === 1 ? 'hidden' : 'visible';
  nextButton.style.visibility = currentPage === totalPages ? 'hidden' : 'visible';
  prevButton.removeEventListener('click', prevPage);
  nextButton.removeEventListener('click', nextPage);
  prevButton.addEventListener('click', prevPage);
  nextButton.addEventListener('click', nextPage);
}
function prevPage() {
  if (currentPage > 1) {
    currentPage--;
    renderReviews();
    updatePagination();
  }
}
function nextPage() {
  if (currentPage < totalPages) {
    currentPage++;
    renderReviews();
    updatePagination();
  }
}
function renderStars(rating) {
  const fullStar = '<img src="https://assets-global.website-files.com/661e93cf28f6a94dfed346bc/664c7f8c658819583d4909b7_bandwerk-full-star.svg" loading="lazy" rev-full="" alt="" class="full_star">';
  const emptyStar = '<img src="https://assets-global.website-files.com/661e93cf28f6a94dfed346bc/664c7f8c28ac28fd3182ef85_bandwerk-empty-star.svg" loading="lazy" rev-empty="" alt="" class="empty_star">';
  let stars = '';
  for (let i = 0; i < 5; i++) {
    stars += i < rating ? fullStar : emptyStar;
  }
  return stars;
}
function renderImages(imageUrls) {
  if (!imageUrls || imageUrls.length === 0) return '';
  return imageUrls.map(url => `<img src="${url}" loading="lazy" rev-image="" alt="" class="review_img">`).join('');
}
function timeAgo(date) {
  const now = new Date();
  const diff = now - date;
  const seconds = Math.floor(diff / 1000);
  const minutes = Math.floor(seconds / 60);
  const hours = Math.floor(minutes / 60);
  const days = Math.floor(hours / 24);
  if (days > 0) return `${days} days ago`;
  if (hours > 0) return `${hours} hours ago`;
  if (minutes > 0) return `${minutes} minutes ago`;
  return `${seconds} seconds ago`;
}
// Initial render
updatePagination();
</script><script>$(".swiper-container").each(function (index) {
    const thumbsSwiper = new Swiper($(this).find(".swiper.is-product-thumbnail")[0], {
      slidesPerView: "auto",
       effect: 'slide', // Add slide effect
   		 speed: 800,
      rewind: false,
      loopedSlides: 8,
      slideToClickedSlide: true,
      spaceBetween: "4%",
    });
    const swiper = new Swiper($(this).find(".swiper.is-product-gallery")[0], {
      mousewheel: {
        forceToAxis: true
      },
      thumbs: {
        swiper: thumbsSwiper,
        slideThumbActiveClass: "is-active",
      },
      keyboard: {
        enabled: true,
        onlyInViewport: true
      },
      navigation: {
        nextEl: $(this).find(".swiper-next")[0],
        prevEl: $(this).find(".swiper-prev")[0],
      },
         pagination: {
      el: ".swiper-pagination-product2",
      clickable: true, // Make the pagination dots clickable
    },
    });
  }); 
</script><script>const handleIntersection = (entries, observer) => {
    if (!entries[0].isIntersecting) return;
    observer.unobserve(productRecommendationsSection);
    const url = productRecommendationsSection.dataset.url;
    fetch(url)
      .then(response => response.text())
      .then(text => {
      const html = document.createElement('div');
      html.innerHTML = text;
      const recommendations = html.querySelector('.product-recommendations');
      if (recommendations && recommendations.innerHTML.trim().length) {
        productRecommendationsSection.innerHTML = recommendations.innerHTML;
      }
    })
      .catch(e => {
      console.error(e);
    });
  };
  const productRecommendationsSection = document.querySelector('.product-recommendations');
  const observer = new IntersectionObserver(handleIntersection, {rootMargin: '0px 0px 200px 0px'});
  observer.observe(productRecommendationsSection);
</script><script src="https://unpkg.com/popper.js@1"></script><script src="https://unpkg.com/tippy.js@4"></script><script>tippy('.is-color', {
    animation: 'fade',
    duration: 200,
    arrow: true,
    delay: [0, 50],
    arrowType: 'sharp',
    theme: 'light-border',
    maxWidth: 220,
    interactive: true,
    })
</script>
</body>
</html>