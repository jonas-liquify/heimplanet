<!doctype html>
<html data-wf-page="664355f906f1731e11d420f8" data-wf-site="664355f906f1731e11d420da" lang="de"><head><meta charset="utf-8">
<title>{{ page_title }}</title><meta content="{{ page_description }}" name="description">
<meta content="{{ page_title }}" property="og:title">
<meta content="{{ page_description }}" property="og:description">
<meta content="{{ page_title }}" property="twitter:title">
<meta content="{{ page_description }}" property="twitter:description">
<meta property="og:type" content="website">
<meta content="summary_large_image" name="twitter:card">
<meta content="width=device-width, initial-scale=1" name="viewport">
<link href="{{ 'normalize.css' | asset_url }}" rel="stylesheet" type="text/css">
<link href="{{ 'components.css' | asset_url }}" rel="stylesheet" type="text/css">
<link href="{{ 'liquify-1-0-26247f015ca6cb0196dbaec248b.css' | asset_url }}" rel="stylesheet" type="text/css">
<script type="text/javascript">!function(o,c){var n=c.documentElement,t=" w-mod-";n.className+=t+"js",("ontouchstart"in o||o.DocumentTouch&&c instanceof DocumentTouch)&&(n.className+=t+"touch")}(window,document);</script>
            {% if settings.favicon == blank %}
              <link href="{{ 'favicon.png' | asset_url }}" rel="shortcut icon" type="image/x-icon">
            {% else %}
              <link rel="shortcut icon" type="image/png" href="{{ settings.favicon | img_url: '32x32' }}">
            {% endif %}
        

            {% if settings.apple_touch_icon == blank %}
              <link href="{{ 'webclip.png' | asset_url }}" rel="apple-touch-icon">
            {% else %}
              <link rel="apple-touch-icon" type="image/png" href="{{ settings.apple_touch_icon | img_url: '32x32' }}">
            {% endif %}
        
<script type="application/ld+json">{
  "@context" : "https://schema.org",
  "@type" : "LocalBusiness",
  "mainEntityOfPage": {
         "@type": "WebPage",
         "@id": "https://www.blockmine.de/"
         },
  "name" : "Blockmine Data GmbH",
  "image" : "https://uploads-ssl.webflow.com/664355f906f1731e11d420da/665d8a1f08e4711f3151b27e_blockmine-open-graph.webp",
  "telephone" : "+49-731-14113790",
  "email" : "support@blockmine.de",
  "priceRange" : "1.000&euro;-100.000&euro;",
  "address" : {
    "@type" : "PostalAddress",
    "streetAddress" : "Magirus-Deutz-Stra&szlig;e 12",
    "addressLocality" : "Ulm",
    "addressRegion" : "Baden-W&uuml;rttemberg",
    "addressCountry" : "Deutschland",
    "postalCode" : "89077"
  },
  "url" : "https://www.blockmine.de/"
}
</script><script defer="" src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script><script defer="" auto="" min="" src="https://cdn.jsdelivr.net/gh/liquify-pro/core@latest/script.js"></script><script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script><meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
<style>[x-cloak] { display: none !important; }
  [li-cloak_disabled] { display: none !important; }
/* Setup Font and Background Color if Text is selected */
::selection {
  color: #fff;
  background: var(--base-color-brand--orange);
}
::-moz-selection {
  color: #fff;
  background: var(--base-color-brand--orange);
}
</style><meta name="theme-color" content="#000" media="(prefers-color-scheme: light)">
<meta name="theme-color" content="#fff" media="(prefers-color-scheme: dark)">
<!--  --><script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-KZ5ZJ64');</script><!--  --><script type="application/ld+json">{
        "@context": "https://schema.org",
        "@type": "Product",
        "name": "{{ product.title }}",
       "image": "https:{{ product.featured_image.src | img_url: '1500x1500' }}",
        "description": "{{ product.description | strip_html }}",
        "brand": "{{ product.vendor }}",
        "sku": "{{ product.selected_or_first_available_variant.sku }}",
        "offers": [
        {% for variant in product.variants %}{
          "@type": "Offer",
          "url": "{{ variant.url }}",
          "priceCurrency": "EUR",
          "price": "{{ variant.price | money }}",
      "priceValidUntil": "{{ 'now' | date: '%s' | plus: 31536000 | date: '%Y-%m-%d' | uri_encode | replace:'+','%20' }}",
          "availability": "{% if variant.available %}https://schema.org/InStock{% else variant.available == false %}https://schema.org/SoldOut{% endif %}",
          "itemCondition": "https://schema.org/NewCondition"
        }{% if forloop.last == false %},{% endif %}{% endfor %}
        ]
        }
    </script><script type="application/ld+json">{
         "@context": "https://schema.org",
         "@type": "BreadcrumbList",
         "itemListElement":
         [
          {
           "@type": "ListItem",
           "position": 1,
           "item":
           {
            "@id": "{{ shop.url }}",
            "name": "Home"
            }
          },
        {
           "@type": "ListItem",
           "position": 2,
           "item":
           {
            "@id": "{% if collection.url %}{{ collection.url }}{% else %}{{ product.vendor }}{% endif %}",
            "name": "{% if collection.url %}{{collection.title }}{% else %}{{ product.vendor }}{% endif %}"
            }
          },
          {
           "@type": "ListItem",
          "position": 3,
          "item":
           {
             "@id": "{{ product.url }}",
             "name": "{{ product.title }}"
           }
          }
         ]
        }
    </script><script type="application/ld+json">{
          "@context": "https://schema.org",
          "@type": "FAQPage",
          "mainEntity": [{% for fa_qs in shop.metaobjects.fa_qs.values %}{
            "@type": "Question",
            "name": "{{ fa_qs.frage }}",
            "acceptedAnswer": {
              "@type": "Answer",
              "text": "{{ fa_qs.antwort | metafield_tag | strip_html }}"
            }
          }{% if forloop.last == false %},{% endif %}{% endfor %}
          ]
        }
    </script><!--  --><script defer="" src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.21/js/intlTelInput.min.js" integrity="sha512-x1RjK1QHIg0CA4lP7CFG98UXDy04pYBPuepiMd4bkJ7sqEfAPHNmVbkBxVDG3zpnolqMX2cd1mX13HlvwZfA8w==" crossorigin="anonymous" referrerpolicy="no-referrer"></script><script defer="" src="https://cdnjs.cloudflare.com/ajax/libs/elevatezoom/2.2.3/jquery.elevatezoom.min.js"></script><script src="{{ '_helper.js' | asset_url }}" type="text/javascript"></script>{{ content_for_header }}</head>
<body li-page="product">

<div class="page-wrapper">{% render 'global_styles' %}
{% section 'header' %}
 {{ content_for_layout }} {% section 'footer' %}
</div><script src="https://d3e54v103j8qbb.cloudfront.net/js/jquery-3.5.1.min.dc5e7f18c8.js?site=664355f906f1731e11d420da" type="text/javascript" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script><script src="{{ 'liquify-1-0-26247f015ca6cb0196dbaec248b.js' | asset_url }}" type="text/javascript"></script>{% render 'search_javascript' %}
<script>document.addEventListener('DOMContentLoaded', () => {
    const navLinks = document.querySelectorAll('[nav-link]');
    navLinks.forEach(link => {
        link.addEventListener('mouseover', () => {
            navLinks.forEach(otherLink => {
                if (otherLink !== link) {
                    otherLink.style.opacity = '0.5';
                }
            });
        });
        link.addEventListener('mouseout', () => {
            navLinks.forEach(otherLink => {
                otherLink.style.opacity = '1';
            });
        });
    });
});
</script><script>$(document).ready(function() {
      // Handle hover effect for footer_link elements
      $('.footer_link').hover(
        function() {
          $('.footer_link').not(this).css('opacity', '0.5');
        },
        function() {
          $('.footer_link').css('opacity', '1');
        }
      );
      // Handle hover effect for social_wrapper elements
      $('.social_wrapper').hover(
        function() {
          $('.social_wrapper').not(this).css('opacity', '0.5');
        },
        function() {
          $('.social_wrapper').css('opacity', '1');
        }
      );
    });
  </script><script>// Find all elements with the attribute 'year'
const elements = document.querySelectorAll('[year]');
// Get the current year
const currentYear = new Date().getFullYear();
// Loop through all elements and set their text content to the current year
elements.forEach(element => {
    element.textContent = currentYear;
});
</script><script>document.addEventListener('DOMContentLoaded', function() {
  // Initial setup: set menu-1 to active and show content-1
  var menu1 = document.querySelector('[menu-1]');
  var content1 = document.querySelector('[content-1]');
  var menu2 = document.querySelector('[menu-2]');
  var content2 = document.querySelector('[content-2]');
  menu1.classList.add('is-active');
  content1.classList.remove('hide');
  content2.classList.add('hide');
  // Function to handle tab switching
  function switchTabs(activeMenu, inactiveMenu, activeContent, inactiveContent) {
    inactiveMenu.classList.remove('is-active');
    activeMenu.classList.add('is-active');
    inactiveContent.classList.add('hide');
    activeContent.classList.remove('hide');
  }
  // Event listeners for menu clicks
  menu1.addEventListener('click', function() {
    switchTabs(menu1, menu2, content1, content2);
  });
  menu2.addEventListener('click', function() {
    switchTabs(menu2, menu1, content2, content1);
  });
});
</script><script>document.addEventListener('DOMContentLoaded', function() {
  var currentPath = window.location.pathname;
  var enLink = document.getElementById('en-link');
  var deLink = document.getElementById('de-link');
  // Determine the current locale and set the active class
  if (currentPath.startsWith('/en')) {
    enLink.classList.add('is-active');
  } else if (currentPath.startsWith('/de') || !currentPath.startsWith('/en')) {
    deLink.classList.add('is-active');
  }
  enLink.addEventListener('click', function(event) {
    event.preventDefault();
    var newPath = removeLocaleSegment(currentPath);
    window.location.href = '/en' + newPath;
  });
  deLink.addEventListener('click', function(event) {
    event.preventDefault();
    var newPath = removeLocaleSegment(currentPath);
    window.location.href = newPath === '' ? '/' : newPath;
  });
  function removeLocaleSegment(path) {
    return path.replace(/^\/(de|en)(\/|$)/, '/');
  }
});
</script><!--  --><noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KZ5ZJ64" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript><!--  --><script>$(document).ready(function() {
  // Populate the country select
  var countrySelect = document.querySelector(".country_select");
  var defaultOption = document.createElement("option");
  defaultOption.value = "";
  defaultOption.text = "Select a country";
  defaultOption.disabled = true;
  defaultOption.selected = true;
  countrySelect.appendChild(defaultOption);
  var countryData = window.intlTelInputGlobals.getCountryData();
  // Create special options for Germany, Austria, and Switzerland
  var specialCountries = ["Germany", "Austria", "Switzerland"];
  specialCountries.forEach(function(countryName) {
    var option = document.createElement("option");
    option.value = countryName;
    option.text = countryName;
    countrySelect.appendChild(option);
  });
  // Add a divider line (non-selectable)
  var divider = document.createElement("option");
  divider.disabled = true;
  divider.text = "------------------------";
  countrySelect.appendChild(divider);
  // Add the rest of the countries, excluding Germany, Austria, and Switzerland
  countryData.forEach(function(country) {
    if (!specialCountries.includes(country.name)) {
      var option = document.createElement("option");
      option.value = country.name.split(' ')[0]; // Use country name without parentheses
      option.text = country.name.split(' ')[0]; // Display country name without parentheses
      countrySelect.appendChild(option);
    }
  });
  // Initially hide the response div
  var responseDiv = $('[response]');
  responseDiv.hide();
  // Handle the calculate button click
  $('[calculate]').on('click', function(event) {
    event.preventDefault();
    var country = $('.country_select').val().split(' ')[0]; // Remove parentheses if present
    var zip = $('.plz_holder').val();
    console.log('Selected country:', country);
    console.log('Entered ZIP code:', zip);
    if (country && zip) {
      // Manually construct the query string
      var queryString = `shipping_address[zip]=${zip}&shipping_address[country]=${country}&shipping_address[province]=`;
      var url = `https://www.blockmine.de/cart/shipping_rates.json?${queryString}`;
      console.log('Query string:', queryString);
      // Fetch the shipping rates
      $.ajax({
        url: url,
        method: 'GET',
        success: function(data) {
          console.log('Shipping rates data:', data);
          responseDiv.html(''); // Clear previous response
          if (data.shipping_rates && data.shipping_rates.length > 0) {
            data.shipping_rates.forEach(function(rate) {
              var priceFormatted = new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' }).format(rate.price);
              responseDiv.append(`<p><strong>${rate.name}: ${priceFormatted}`);
            });
          } else {
            responseDiv.append('<p>No shipping rates available.');
          }
          // Show the response div
          responseDiv.show();
        },
        error: function(jqXHR, textStatus, errorThrown) {
          console.log('Error fetching shipping rates:', textStatus, errorThrown);
          responseDiv.text('Failed to fetch shipping rates.');
          responseDiv.show();
        }
      });
    } else {
      alert('Please select a country and enter a valid zip code.');
    }
  });
});
</script><script>$(document).ready(function() {
  function applyZoom() {
    // Remove existing zoom instances
    $('.product_gallery-image').removeData('elevateZoom');
    $('.zoomContainer').remove();
    // Apply zoom to the image in the active slide
    $('.swiper-slide-active .product_gallery-image').elevateZoom({
      zoomType: "lens",
      lensShape: "square",
      lensSize: 500  // Adjust the size as needed
    });
    // Apply custom outline color
    setTimeout(function() {
      $('.zoomLens').css('border', '2px solid #ffca43'); // Adjust the border width as needed
    }, 100); // Delay to ensure the zoomLens element is available
  }
  function checkViewportAndApplyZoom() {
    if ($(window).width() >= 1024) { // Adjust the breakpoint as needed for desktop
      applyZoom();
      // Re-apply zoom when the slide changes
      $('.swiper').on('slideChange', function() {
        applyZoom();
      });
      // Re-apply zoom when the slide changes for Swiper 6 and earlier versions
      $('.swiper')[0].swiper.on('slideChangeTransitionEnd', function() {
        applyZoom();
      });
    }
  }
  // Initially apply zoom if viewport is desktop
  checkViewportAndApplyZoom();
  // Re-check the viewport on resize
  $(window).resize(function() {
    checkViewportAndApplyZoom();
  });
});
</script><script>$(".swiper-container").each(function (index) {
    const thumbsSwiper = new Swiper($(this).find(".swiper.is-product-thumbnail")[0], {
      slidesPerView: "auto",
      rewind: false,
      loopedSlides: 8,
      slideToClickedSlide: true,
      spaceBetween: "4%",
    });
    const swiper = new Swiper($(this).find(".swiper.is-product-gallery")[0], {
      mousewheel: {
        forceToAxis: true
      },
      thumbs: {
        swiper: thumbsSwiper,
        slideThumbActiveClass: "is-active",
      },
      keyboard: {
        enabled: true,
        onlyInViewport: true
      },
      navigation: {
        nextEl: $(this).find(".swiper-next")[0],
        prevEl: $(this).find(".swiper-prev")[0],
      }
    });
  }); 
</script><script>document.addEventListener('DOMContentLoaded', function() {
    const productRecommendationsSection = document.querySelector('.product-recommendations');
    const url = productRecommendationsSection.dataset.url;
    fetch(url)
      .then(response => response.text())
      .then(text => {
      const html = document.createElement('div');
      html.innerHTML = text;
      const recommendations = html.querySelector('.product-recommendations');
      if (recommendations && recommendations.innerHTML.trim().length) {
        productRecommendationsSection.innerHTML = recommendations.innerHTML;
      }
    })
      .catch(e => {
      console.error(e);
    });
  });
</script>
</body>
</html>